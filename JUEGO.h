/**************************************************************************/
/**************************************************************************/
/***** 			      PONTIFICIA UNIVERSIDAD CATÓLICA DEL PERÚ 			      *****/
/***** 				        FACULTAD DE CIENCIAS E INGENIERÍA 				      *****/
/***** 						            SISTEMAS DIGITALES 						          *****/
/**************************************************************************/
/***** Archivo: JUEGO.h												                        *****/
/***** Microcontrolador: TM4C123GH6PM 								                *****/
/***** Módulo(s) uC: Ninguno									 	                      *****/
/***** Autor: Cristhian Foester Llamocca Ccaico						            *****/
/***** Fecha: Noviembre 2017 										                      *****/
/**************************************************************************/
/***** Funciones para generación, muestra y actualización de los ele_ *****/
/***** mentos del juego.		 									                        *****/
/**************************************************************************/
/**************************************************************************/

#ifndef JUEGO_H_
#define JUEGO_H_

/**************************************************************************/
/***** 			 					            enter() 			  		 	              *****/
/**************************************************************************/
/***** La función regresa al extremo izquierdo el cursor.			        *****/
/**************************************************************************/
void enter(void);

/**************************************************************************/
/***** 			 					            arriba() 			  		 	              *****/
/**************************************************************************/
/***** La función mueve "n" posiciones hacia arriba el cursor. 		    *****/
/**************************************************************************/
void arriba(uint8_t n);

/**************************************************************************/
/***** 			 					             abajo() 			  		 	              *****/
/**************************************************************************/
/***** La función mueve "n" posiciones hacia abajo el cursor. 		    *****/
/**************************************************************************/
void abajo(uint8_t n);

/**************************************************************************/
/***** 			 					            derecha() 			  		 	            *****/
/**************************************************************************/
/***** La función mueve "n" posiciones hacia la derecha el cursor.	  *****/
/**************************************************************************/
void derecha(uint8_t n);

/**************************************************************************/
/***** 			 					              pos() 			  		 	 	            *****/
/**************************************************************************/
/***** La función mueve hacia el tope de arriba al cursor.	 		      *****/
/**************************************************************************/
void Pos(void);

/**************************************************************************/
/***** 			 				            InferiorIz() 			  	 	 	            *****/
/**************************************************************************/
/***** La función ubica al cursor en la posición inferior izquierda.  *****/
/**************************************************************************/
void InferiorIz(void);

/**************************************************************************/
/***** 			 				              LineaH() 			  	 	 	  	          *****/
/**************************************************************************/
/***** La función genera una división horizontal para el tablero.	    *****/
/**************************************************************************/
void LineaH(void);

/**************************************************************************/
/***** 			 					            LineaV() 			  	 	 	              *****/
/**************************************************************************/
/***** La función genera una división vertical para el tablero.  	    *****/
/**************************************************************************/
void LineaV(void);

/**************************************************************************/
/***** 			 			          GENERA_CUADRICULA() 			  	 	          *****/
/**************************************************************************/
/***** La función muestra el tablero generado en el interfaz serial.  *****/
/**************************************************************************/
void GENERA_CUADRICULA(void);

/**************************************************************************/
/***** 			 				            UbicaCasilla() 			  	 		          *****/
/**************************************************************************/
/***** La función ubica al cursor en la casilla P. Se utiliza como	  *****/
/***** referencia la posicion inferior izquierda.					            *****/
/**************************************************************************/
void UbicaCasilla(uint8_t p);

/**************************************************************************/
/***** 			 				           InferiorInicial() 		  	 		          *****/
/**************************************************************************/
/***** La función ubica al cursor en la posicion inferior izquierda   *****/
/***** Se utiliza como referencia la posicion P.					            *****/
/**************************************************************************/
void InferiorInicial(uint8_t p);

/**************************************************************************/
/***** 			 		          Obtener_Bitx_Datop_Arreglo() 		  	 	      *****/
/**************************************************************************/
/***** La función desplaza el dato en la posición "p" del arreglo[]   *****/
/***** y "x" indica el bit a desplazar dependiendo del nuemero a 	    *****/
/***** enmascarar.												                            *****/
/**************************************************************************/
uint8_t Obtener_Bitx_Datop_Arreglo(uint8_t arreglo[], uint8_t p, uint8_t x);

/**************************************************************************/
/***** 			 				            EscribeDatos() 		  			 	          *****/
/**************************************************************************/
/***** La función muestra las percepciones del jugador en la casilla  *****/
/***** actual en la que se encuentra.					  			                *****/
/**************************************************************************/
void EscribeDatos(uint8_t arreglo[], uint8_t p);

/**************************************************************************/
/***** 			 		          MUESTRA_ELEMENTOS_TABLERO()   			 	      *****/
/**************************************************************************/
/***** La función muestra la información de cada casilla (O, W, H, B, *****/
/*****  T, A).					  			  						                        *****/
/**************************************************************************/
void MUESTRA_ELEMENTOS_TABLERO(uint8_t MiArreglo[]);


#endif /* JUEGO_H_ */
